{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","getContactsItems","state","contacts","items","getContactsFilter","filter","INITIAL_FORM_LOCAL_STATE","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","target","value","Error","className","s","form","action","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","actions","label","htmlFor","inputField","type","placeholder","pattern","title","required","onChange","button","Filter","filterValue","ContactItem","contactItem","contactText","onClick","ContactList","list","includes","map","App","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","itemsReducer","createReducer","filterReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e5aaeb72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2MWw2\",\"contactText\":\"ContactItem_contactText__10vdI\",\"button\":\"ContactItem_button__Qu4mM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__H3WKo\",\"inputField\":\"Filter_inputField__mCx1s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3_jNq\"};","import { nanoid } from 'nanoid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('phonebook/add', (name, number) => ({\n  payload: {\n    id: nanoid(),\n    name,\n    number,\n  },\n}));\nexport const deleteContact = createAction('phonebook/delete');\nexport const changeFilter = createAction('phonebook/changeFilter');\n","export const getContactsItems = state => state.contacts.items;\nexport const getContactsFilter = state => state.contacts.filter;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport { getContactsItems } from '../../redux/phonebook/phonebook-selectors';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_FORM_LOCAL_STATE = { name: '', number: '' };\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContactsItems);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName(INITIAL_FORM_LOCAL_STATE.name);\n    setNumber(INITIAL_FORM_LOCAL_STATE.number);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Unknown input field name');\n    }\n  };\n\n  const addContact = (name, number) => dispatch(actions.addContact(name, number));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isContactAlreadySaved = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isContactAlreadySaved) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    addContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} action=\"#\" onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor=\"number\">\n        Number:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        placeholder=\"Enter phone\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport { getContactsFilter } from '../../redux/phonebook/phonebook-selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const filterValue = useSelector(getContactsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.inputField}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={filterValue}\n        onChange={e => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </>\n  );\n};\n\nexport default Filter;\n","import { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../redux/phonebook/phonebook-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.contactItem}>\n      <span className={s.contactText}>\n        {contact.name}: {contact.number}\n      </span>\n      <button className={s.button} onClick={() => dispatch(actions.deleteContact(contact.id))}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem';\nimport { getContactsItems, getContactsFilter } from '../../redux/phonebook/phonebook-selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContactsItems);\n  const filter = useSelector(getContactsFilter);\n\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(contact => {\n          return <ContactItem contact={contact} key={contact.name} />;\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { getContactsItems } from './redux/phonebook/phonebook-selectors';\nimport './App.css';\n\nconst App = () => {\n  const contacts = useSelector(getContactsItems);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"phonebookTitle\">Phonebook</h1>\n      <ContactForm />\n\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter />\n      {contacts.length !== 0 && <ContactList />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './phonebook-actions';\n\nconst initialItemsState = [];\nconst initialFilterState = '';\n\nconst itemsReducer = createReducer(initialItemsState, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer(initialFilterState, {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items: itemsReducer, filter: filterReducer });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\nconst middleware = isDevelopment\n  ? [\n      ...getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n      logger,\n    ]\n  : null;\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  devTools: isDevelopment,\n  middleware,\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__kCWWm\",\"label\":\"ContactForm_label__18j5x\",\"inputField\":\"ContactForm_inputField__2Y8r3\",\"button\":\"ContactForm_button__3mH41\"};"],"sourceRoot":""}